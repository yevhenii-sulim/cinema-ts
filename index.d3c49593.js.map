{"mappings":"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","sources":["src/ts/pagination.ts","src/ts/item.ts","src/ts/itemList.ts","src/index.ts"],"sourcesContent":["interface Pag {\n  totalPages?: number;\n  page?: number;\n  showedPage?: number;\n}\n\nexport default class Pagination {\n  totalPages?: number;\n  page?: number;\n  showedPage?: number;\n  listPage?: number[];\n  element?: HTMLUListElement;\n\n  constructor({ totalPages, page = 1, showedPage = 5 }: Pag = {}) {\n    this.totalPages = totalPages;\n    this.page = page;\n    this.showedPage = showedPage;\n    this.render(this.page);\n    this.addEventListeners();\n  }\n\n  getTeamplateList(page: number): string {\n    const active: string = page === this.page ? 'active' : '';\n    return `<li class=\"pagination page ${active}\" data-page-index=\"${page}\"><button>${page}</button></li>`;\n  }\n\n  showedCountPages(): number {\n    const counterPages: number =\n      this.totalPages < this.showedPage ? this.totalPages : this.showedPage;\n    return counterPages;\n  }\n\n  pages(pages: number): string {\n    const list: string[] = [];\n    const listPage: number[] = [];\n    for (let page = pages; page < this.showedCountPages() + pages; page++) {\n      listPage.push(page);\n      list.push(this.getTeamplateList(page));\n    }\n    this.listPage = listPage;\n    return list.join('');\n  }\n\n  render(page: number): void {\n    const listPage = this.pages(page);\n\n    const wrapper: HTMLUListElement =\n      document.querySelector('.pagination-list');\n    wrapper.insertAdjacentHTML('beforeend', listPage);\n\n    this.element = wrapper;\n  }\n\n  upDateRender(page: number): void {\n    if (page > this.totalPages || page < 1) return;\n    this.element.innerHTML = this.pages(page);\n  }\n\n  addEventListeners(): void {\n    const next: HTMLElement = this.element.parentNode.querySelector('.next');\n    const prev: HTMLElement = this.element.parentNode.querySelector('.prev');\n\n    next.addEventListener('click', (): void => {\n      this.nextPage();\n    });\n    prev.addEventListener('click', (): void => {\n      this.prevPage();\n    });\n\n    this.element.addEventListener('click', (evt): void => {\n      const carrentPage: HTMLElement = (evt.target as HTMLElement).closest(\n        '.page'\n      );\n      if (!carrentPage) {\n        return;\n      }\n      const pageIndex: number = parseInt(carrentPage.dataset.pageIndex);\n\n      this.setPage(pageIndex);\n    });\n  }\n\n  setPage(pageIndex: number): void {\n    if (pageIndex === this.page) return;\n    if (pageIndex > this.totalPages || pageIndex < 1) return;\n    const activePage: HTMLElement = document.querySelector('.page.active');\n\n    if (activePage) {\n      activePage.classList.remove('active');\n    }\n\n    const carrentPage: HTMLElement = document.querySelector(\n      `[data-page-index=\"${pageIndex}\"]`\n    );\n    carrentPage.classList.add('active');\n    // this.dispatchEvent(pageIndex);\n    this.page = pageIndex;\n  }\n\n  nextPage(): void {\n    const nextPage: number = this.page + 1;\n    if (nextPage > Math.max(...this.listPage)) {\n      this.upDateRender(nextPage - (this.showedPage - 1));\n    }\n    this.setPage(nextPage);\n  }\n\n  prevPage(): void {\n    const prevPage: number = this.page - 1;\n    if (prevPage < Math.min(...this.listPage)) {\n      this.upDateRender(prevPage);\n    }\n    this.setPage(prevPage);\n  }\n  // dispatchEvent(pageIndex) {\n  //   const customEvent = new CustomEvent('page-changed', {\n  //     detail: pageIndex,\n  //   });\n  //   this.element.dispatchEvent(customEvent);\n  // }\n}\n","interface Itemtype {\n  image: string;\n  tytle: string;\n  ganre: string[];\n}\n\nexport interface movie {\n  adult: boolean;\n  backdrop_path: string;\n  genre_ids: number[];\n  id: number;\n  original_language: string;\n  original_title: string;\n  overview: string;\n  popularity: number;\n  poster_path: string;\n  release_date: string;\n  title: string;\n  video: boolean;\n  vote_average: number;\n  vote_count: number;\n}\n\nexport default class Item {\n  product: movie;\n  genre: string;\n  element: Element;\n\n  constructor(product: movie, genre: string) {\n    this.product = product;\n    this.genre = genre;\n    this.render();\n  }\n\n  getTemplate(): string {\n    return `\n        <li class=\"film\">\n        <a href=\"#\" class=\"link-film\">\n          <img src=\"https://image.tmdb.org/t/p/w500${this.product.poster_path}\" alt=\"film\" class=\"img-film\">\n          <h2 class=\"tytle-film\">${this.product.title}</h2>\n          <p class=\"ganre-film\">${this.genre}t</p>\n        </a>\n      </li>\n    `;\n  }\n  render(): void {\n    const wrapper: HTMLElement = document.createElement('div');\n    wrapper.innerHTML = this.getTemplate();\n    this.element = wrapper.firstElementChild;\n  }\n}\n","import Item from './item';\nimport { movie } from './item';\n\ninterface itemGanre {\n  id: number;\n  name: string;\n}\n\ninterface listGanres {\n  genres: itemGanre[];\n}\nasync function displayGanres(data: movie): Promise<string> {\n  const ganresNumber: Response = await fetch(\n    'https://api.themoviedb.org/3/genre/movie/list?language=en',\n    {\n      headers: {\n        Authorization:\n          'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlZjU0YzMxNmYxNjZiMmE1OTEzNzkxZThiM2Y2M2E0YSIsInN1YiI6IjY0NzBkZmZhYzVhZGE1MDBjMWEzNzhmMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fljmrABHLVGUf2e0aWKvdHeTeR0ruZNkP26DhsQLuYM',\n        accept: 'application/json',\n      },\n    }\n  );\n  const dataGanres: listGanres = await ganresNumber.json();\n  const ganreMovie: string = dataGanres.genres\n    .filter(item => data.genre_ids.includes(item.id))\n    .map(({ name }) => name)\n    .join(', ');\n  return ganreMovie;\n}\n\nexport default class ItemList {\n  itemList: movie[];\n  element: Element;\n  constructor(itemList: movie[] = []) {\n    this.itemList = itemList;\n    this.render();\n  }\n\n  async renderCard(): Promise<string> {\n    return await this.itemList\n      .map(async item => {\n        const movieGenre: string = await displayGanres(item);\n        const movie = new Item(item, movieGenre);\n        return movie.element;\n      })\n      .join('');\n  }\n\n  async render(): Promise<void> {\n    const wrapper: HTMLElement = document.querySelector('.cinema-list');\n    const moviesList: string = await this.renderCard();\n    wrapper.innerHTML = moviesList;\n    this.element = wrapper;\n  }\n}\n","import Pagination from './ts/pagination';\nimport ItemList from './ts/itemList';\nimport { movie } from './ts/item';\nconst key: string = 'ef54c316f166b2a5913791e8b3f63a4a';\nconst page: number = 1;\n\ninterface fetchDataCinema {\n  page: number;\n  results: movie[];\n  total_pages: number;\n  total_results: number;\n}\n\nfetch(\n  `https://api.themoviedb.org/3/discover/movie?include_adult=false&include_video=false&language=en-US&page=${page}&sort_by=popularity.desc`,\n  {\n    headers: {\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlZjU0YzMxNmYxNjZiMmE1OTEzNzkxZThiM2Y2M2E0YSIsInN1YiI6IjY0NzBkZmZhYzVhZGE1MDBjMWEzNzhmMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fljmrABHLVGUf2e0aWKvdHeTeR0ruZNkP26DhsQLuYM',\n      accept: 'application/json',\n    },\n  }\n)\n  .then((data): Promise<fetchDataCinema> => data.json())\n  .then((data): void => {\n    showPage(data);\n    showItem(data.results);\n  });\n\nconst cinemaList: HTMLElement = document.createElement('div');\nconst list: HTMLElement = document.querySelector('.pagination-list');\n\nfunction showPage(data: fetchDataCinema): void {\n  const pagination = new Pagination(data);\n  list.append(...Array.from(pagination.element.children));\n}\n\nfunction showItem(data: movie[]): void {\n  const movies = new ItemList(data);\n  cinemaList.appendChild(movies.element);\n}\n"],"names":["$57b577c912f01405$export$2e2bcd8739ae039","constructor","totalPages","page","showedPage","this","render","addEventListeners","getTeamplateList","showedCountPages","pages","list","listPage","push","join","wrapper","document","querySelector","insertAdjacentHTML","element","upDateRender","innerHTML","next","parentNode","prev","addEventListener","nextPage","prevPage","evt","carrentPage","target","closest","pageIndex","parseInt","dataset","setPage","activePage","classList","remove","add","Math","max","min","$3502cc00802f45f0$export$2e2bcd8739ae039","product","genre","getTemplate","poster_path","title","createElement","firstElementChild","$0a2750be9919b6ad$export$2e2bcd8739ae039","itemList","async","map","item","movieGenre","data","ganresNumber","fetch","headers","Authorization","accept","json","genres","filter","genre_ids","includes","id","name","$0a2750be9919b6ad$var$displayGanres","moviesList","renderCard","then","pagination","$1e6a16da88d577c6$var$list","append","Array","from","children","$1e6a16da88d577c6$var$showPage","movies","$1e6a16da88d577c6$var$cinemaList","appendChild","$1e6a16da88d577c6$var$showItem","results"],"version":3,"file":"index.d3c49593.js.map"}