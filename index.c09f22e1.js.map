{"mappings":"AAMe,MAAAA,EAObC,aAAYC,WAAEA,EAAUC,KAAEA,EAAO,EAACC,WAAEA,EAAa,GAAW,IAC1DC,KAAKH,WAAaA,EAClBG,KAAKF,KAAOA,EACZE,KAAKD,WAAaA,EAClBC,KAAKC,OAAOD,KAAKF,MACjBE,KAAKE,mB,CAGPC,iBAAiBL,GAEf,MAAO,8BADgBA,IAASE,KAAKF,KAAO,SAAW,wBACUA,cAAiBA,iB,CAGpFM,mBAGE,OADEJ,KAAKH,WAAaG,KAAKD,WAAaC,KAAKH,WAAaG,KAAKD,U,CAI/DM,MAAMA,GACJ,MAAMC,EAAiB,GACjBC,EAAqB,GAC3B,IAAK,IAAIT,EAAOO,EAAOP,EAAOE,KAAKI,mBAAqBC,EAAOP,IAC7DS,EAASC,KAAKV,GACdQ,EAAKE,KAAKR,KAAKG,iBAAiBL,IAGlC,OADAE,KAAKO,SAAWA,EACTD,EAAKG,KAAK,G,CAGnBR,OAAOH,GACL,MAAMS,EAAWP,KAAKK,MAAMP,GAEtBY,EACJC,SAASC,cAAc,oBACzBF,EAAQG,mBAAmB,YAAaN,GAExCP,KAAKc,QAAUJ,C,CAGjBK,aAAajB,GACPA,EAAOE,KAAKH,YAAcC,EAAO,IACrCE,KAAKc,QAAQE,UAAYhB,KAAKK,MAAMP,G,CAGtCI,oBACE,MAAMe,EAAoBjB,KAAKc,QAAQI,WAAWN,cAAc,SAC1DO,EAAoBnB,KAAKc,QAAQI,WAAWN,cAAc,SAEhEK,EAAKG,iBAAiB,SAAS,KAC7BpB,KAAKqB,UAAU,IAEjBF,EAAKC,iBAAiB,SAAS,KAC7BpB,KAAKsB,UAAU,IAGjBtB,KAAKc,QAAQM,iBAAiB,SAASG,IACrCC,QAAQC,IAAIF,EAAIG,QAChB,MAAMC,EAA2BJ,EAAIG,OAAOE,QAAQ,SACpD,IAAKD,EACH,OAEF,MAAME,EAAoBC,SAASH,EAAYI,QAAQF,WAEvD7B,KAAKgC,QAAQH,EAAU,G,CAI3BG,QAAQH,GACN,GAAIA,IAAc7B,KAAKF,KAAM,OAC7B,GAAI+B,EAAY7B,KAAKH,YAAcgC,EAAY,EAAG,OAClD,MAAMI,EAA0BtB,SAASC,cAAc,gBAEnDqB,GACFA,EAAWC,UAAUC,OAAO,UAGGxB,SAASC,cACxC,qBAAqBiB,OAEXK,UAAUE,IAAI,UAC1BpC,KAAKqC,cAAcR,GACnB7B,KAAKF,KAAO+B,C,CAGdR,WACE,MAAMA,EAAmBrB,KAAKF,KAAO,EACjCuB,EAAWiB,KAAKC,OAAOvC,KAAKO,WAC9BP,KAAKe,aAAaM,GAAYrB,KAAKD,WAAa,IAElDC,KAAKgC,QAAQX,E,CAGfC,WACE,MAAMA,EAAmBtB,KAAKF,KAAO,EACjCwB,EAAWgB,KAAKE,OAAOxC,KAAKO,WAC9BP,KAAKe,aAAaO,GAEpBtB,KAAKgC,QAAQV,E,CAEfe,cAAcR,GACZ,MAAMY,EAAc,IAAIC,YAAY,eAAgB,CAClDC,OAAQd,IAEV7B,KAAKc,QAAQuB,cAAcI,E,EClH/BG,MACE,oIACA,CACEC,QAAS,CACPC,cACE,6NACFC,OAAQ,sBAIXC,MAAKC,GAAQA,EAAKC,SAClBF,MAAKC,IACJzB,QAAQC,IAAIwB,GAKhB,SAAkBA,GAChB,MAAME,EAAa,IAAIxD,EAAWsD,GAClCG,EAAKC,UAAUC,MAAMC,KAAKJ,EAAWrC,QAAQ0C,WAC7CL,EAAWrC,QAAQI,WAAWE,iBAAiB,gBAAgBqC,IAC7DjC,QAAQC,IAAIgC,EAAE,G,CARPC,CAAST,MAGpB,MAAMG,EAAoBzC,SAASC,cAAc","sources":["src/ts/pagination.ts","src/index.ts"],"sourcesContent":["interface Pag {\n  totalPages?: number;\n  page?: number;\n  showedPage?: number;\n}\n\nexport default class Pagination {\n  totalPages?: number;\n  page?: number;\n  showedPage?: number;\n  listPage?: number[];\n  element?: HTMLUListElement;\n\n  constructor({ totalPages, page = 1, showedPage = 5 }: Pag = {}) {\n    this.totalPages = totalPages;\n    this.page = page;\n    this.showedPage = showedPage;\n    this.render(this.page);\n    this.addEventListeners();\n  }\n\n  getTeamplateList(page: number) {\n    const active: string = page === this.page ? 'active' : '';\n    return `<li class=\"pagination page ${active}\" data-page-index=\"${page}\"><button>${page}</button></li>`;\n  }\n\n  showedCountPages() {\n    const counterPages: number =\n      this.totalPages < this.showedPage ? this.totalPages : this.showedPage;\n    return counterPages;\n  }\n\n  pages(pages: number) {\n    const list: string[] = [];\n    const listPage: number[] = [];\n    for (let page = pages; page < this.showedCountPages() + pages; page++) {\n      listPage.push(page);\n      list.push(this.getTeamplateList(page));\n    }\n    this.listPage = listPage;\n    return list.join('');\n  }\n\n  render(page: number) {\n    const listPage = this.pages(page);\n\n    const wrapper: HTMLUListElement =\n      document.querySelector('.pagination-list');\n    wrapper.insertAdjacentHTML('beforeend', listPage);\n\n    this.element = wrapper;\n  }\n\n  upDateRender(page: number) {\n    if (page > this.totalPages || page < 1) return;\n    this.element.innerHTML = this.pages(page);\n  }\n\n  addEventListeners() {\n    const next: HTMLElement = this.element.parentNode.querySelector('.next');\n    const prev: HTMLElement = this.element.parentNode.querySelector('.prev');\n\n    next.addEventListener('click', () => {\n      this.nextPage();\n    });\n    prev.addEventListener('click', () => {\n      this.prevPage();\n    });\n\n    this.element.addEventListener('click', evt => {\n      console.log(evt.target);\n      const carrentPage: HTMLElement = evt.target.closest('.page');\n      if (!carrentPage) {\n        return;\n      }\n      const pageIndex: number = parseInt(carrentPage.dataset.pageIndex);\n\n      this.setPage(pageIndex);\n    });\n  }\n\n  setPage(pageIndex: number) {\n    if (pageIndex === this.page) return;\n    if (pageIndex > this.totalPages || pageIndex < 1) return;\n    const activePage: HTMLElement = document.querySelector('.page.active');\n\n    if (activePage) {\n      activePage.classList.remove('active');\n    }\n\n    const carrentPage: HTMLElement = document.querySelector(\n      `[data-page-index=\"${pageIndex}\"]`\n    );\n    carrentPage.classList.add('active');\n    this.dispatchEvent(pageIndex);\n    this.page = pageIndex;\n  }\n\n  nextPage() {\n    const nextPage: number = this.page + 1;\n    if (nextPage > Math.max(...this.listPage)) {\n      this.upDateRender(nextPage - (this.showedPage - 1));\n    }\n    this.setPage(nextPage);\n  }\n\n  prevPage() {\n    const prevPage: number = this.page - 1;\n    if (prevPage < Math.min(...this.listPage)) {\n      this.upDateRender(prevPage);\n    }\n    this.setPage(prevPage);\n  }\n  dispatchEvent(pageIndex) {\n    const customEvent = new CustomEvent('page-changed', {\n      detail: pageIndex,\n    });\n    this.element.dispatchEvent(customEvent);\n  }\n}\n","import Pagination from './ts/pagination';\nconst key: string = 'ef54c316f166b2a5913791e8b3f63a4a';\nconst page: number = 1;\nfetch(\n  `https://api.themoviedb.org/3/discover/movie?include_adult=false&include_video=false&language=en-US&page=${page}&sort_by=popularity.desc`,\n  {\n    headers: {\n      Authorization:\n        'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJlZjU0YzMxNmYxNjZiMmE1OTEzNzkxZThiM2Y2M2E0YSIsInN1YiI6IjY0NzBkZmZhYzVhZGE1MDBjMWEzNzhmMiIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.fljmrABHLVGUf2e0aWKvdHeTeR0ruZNkP26DhsQLuYM',\n      accept: 'application/json',\n    },\n  }\n)\n  .then(data => data.json())\n  .then(data => {\n    console.log(data);\n    return showPage(data);\n  });\n\nconst list: HTMLElement = document.querySelector('.pagination-list');\nfunction showPage(data: any) {\n  const pagination = new Pagination(data);\n  list.append(...Array.from(pagination.element.children));\n  pagination.element.parentNode.addEventListener('page-changed', e => {\n    console.log(e);\n  });\n}\n"],"names":["$57b577c912f01405$export$2e2bcd8739ae039","constructor","totalPages","page","showedPage","this","render","addEventListeners","getTeamplateList","showedCountPages","pages","list","listPage","push","join","wrapper","document","querySelector","insertAdjacentHTML","element","upDateRender","innerHTML","next","parentNode","prev","addEventListener","nextPage","prevPage","evt","console","log","target","carrentPage","closest","pageIndex","parseInt","dataset","setPage","activePage","classList","remove","add","dispatchEvent","Math","max","min","customEvent","CustomEvent","detail","fetch","headers","Authorization","accept","then","data","json","pagination","$1e6a16da88d577c6$var$list","append","Array","from","children","e","$1e6a16da88d577c6$var$showPage"],"version":3,"file":"index.c09f22e1.js.map"}